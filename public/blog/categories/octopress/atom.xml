<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: octopress | Dreaming in digital]]></title>
  <link href="http://evanhung.github.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://evanhung.github.com/"/>
  <updated>2012-03-16T12:38:12+08:00</updated>
  <id>http://evanhung.github.com/</id>
  <author>
    <name><![CDATA[Evan Hung]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[部署Octopress]]></title>
    <link href="http://evanhung.github.com/blog/2012/03/16/deploy-octopress/"/>
    <updated>2012-03-16T11:14:00+08:00</updated>
    <id>http://evanhung.github.com/blog/2012/03/16/deploy-octopress</id>
    <content type="html"><![CDATA[<h3>认识github</h3>

<p>github其实就是一个具有社区功能的代码管理网站，方便开源程序的协力开发，当然它也可以成为软件公司的代码分布平台，但是如果你不想公开你的代码，就必须缴纳年费。</p>

<p>在github上建站最好将repo名称设置成username.github.com的模式，之后username.github.com这个连接就会自动打开repo内的index.html，而不是github的网站页面。</p>

<p>创建好名为username.github.com的repo后上传一个index.html到master branch来完成建站的准备工作：</p>

<!-- more -->


<p>开始之前先设定git SSh密匙，和git用户全局参数，参照www.github.com</p>

<p>{%codeblock%}
$ git init
$ git remote add origin git@github.com:username/username.github.com.git
$ echo "My GitHub Page" > index.html
$ git add .
$ git commit -a -m "First pages commit"
$ git push origin master
{%endcodeblock%}</p>

<p>刷新username.github.com可以看到My GitHub Page的字样就完成了。</p>

<p>了解github指令和更多的用法：
<a href="http://rogerdudler.github.com/git-guide/index.zh.html">git - the simple guide - no deep shit</a></p>

<p><strong>部署Octopress到github</strong></p>

<p>进入octopress目录,设定远程仓库：</p>

<pre><code>$ git remote add origin git@github.com:username/
$ rake setup_github_pages #设定Github账户目录
</code></pre>

<p>之后它会提示输入github账户名，按照一下形式输入：</p>

<pre><code>git@github.com:username/username.github.com.git
</code></pre>

<p>如果已经执行过rake generate,则可以直接进行部署了：</p>

<pre><code>$ rake deploy
</code></pre>

<p>完成后将源码保存到github的source branch</p>

<pre><code>$ git add .
$ git commit -m 'site updated'
$ git push origin HEAD:source
</code></pre>

<p><strong>编辑已经在github搭建好的Octopress：</strong></p>

<p>{%codeblock%}
$ cd local.blog.path  #选择一个本地目录保存octopress
$ git init            <br/>
$ git remote add origin git@github.com:username/username.github.com.git
$ git pull origin source        #从source抓取网站源码
$ gem install bundler
$ bundle install
$ sudo rm -rf _deploy
$ rake setup_github_pages   #设定账户名
git@github.com:username/username.github.com.git
{%endcodeblock%}</p>

<h3>认识heroku</h3>

<p>Heroku 是云端应用程式平台，可以想成是「云端上的网页空间」，不同于传统网页空间的计费方式，Heroku 是按照你所使用的资源来计费的，像是 CPU、RAM 使用越多就需要付越多钱，不过免费的方案已经够一般应用程式使用了。对比github，heroku的好处是repo是不公开的，也就是说除了作者外没有人可以看到网站目录。而且个人感觉在国内浏览heroku好像比github快</p>

<p>要使用heroku,先得要安装heroku工具：</p>

<pre><code>$ gem install heroku   #在octopress目录内
</code></pre>

<p>之后就可以直接登陆heroku:</p>

<pre><code>$ heoku login
</code></pre>

<p>首次使用需要上传RSA密匙:</p>

<pre><code>$ heroku keys:add
$ heroku keys   #查看是否上传成功
</code></pre>

<p>最后就可以开始创建程序了(appName为自定义程序名)：</p>

<pre><code>$ heroku create appName
</code></pre>

<p><strong>部署Octopress到heroku</strong></p>

<p>首先要修改 <code>.gitignore</code> 文件，去掉文档中的 <code>public</code>,否则git不会 上传public文件夹，会出现网站无法访问的错误</p>

<p>设定默认的远程库为heroku</p>

<pre><code># Set heroku to be the default remote for push/fetch
git config branch.master.remote heroku
</code></pre>

<p>如果已经用rake generate生成过网站则可以直接开始部署了：</p>

<pre><code>git add .
git commit -m 'site updated'
git push heroku master
</code></pre>

<p>如果出现 <code>Permission Denied(public key)</code> 则会有两种可能：</p>

<p>1.生成的rsa密匙不是默认的id_rsa名称，则需要在 <code>~/.ssh</code> 目录中添加<code>config</code> 文件将heroku的密匙指向你设定的密匙：</p>

<p>{%codeblock%}
Host heroku.com
Hostname heroku.com
Port 22
IdentitiesOnly yes
IdentityFile ~/.ssh/id_heroku
TCPKeepAlive yes
User brandon
{%endcodeblock%}</p>

<p>2.heroku进入了 <code>/root/.shh/</code>而不是<code>~/.ssh/</code>查找密匙, 简单将密匙拷贝过去就可以了:</p>

<pre><code>$ sudo cp ~/.ssh/id_rsa* /root/.ssh/
</code></pre>

<p>部署完成后就可以在appName.heroku.com看到octopress页面了</p>

<pre><code>$ heroku open    #查看应用
</code></pre>

<p><strong>编辑已经在heroku搭建好的Octopress</strong>
{%codeblock%}</p>

<h1>设定远程库</h1>

<p>git config branch.master.remote heroku
git remote set-url heroku git@heroku.com:appName.git</p>

<h1>抓取网站源码</h1>

<p>git clone git@heroku.com:appName.git -o heroku</p>

<h1>生成上传</h1>

<p>rake generate
git add .
git commit -m 'site updated'
git push heroku master
{%endcodeblock%}</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Octopress安装手记]]></title>
    <link href="http://evanhung.github.com/blog/2012/03/15/octopress-install/"/>
    <updated>2012-03-15T14:14:00+08:00</updated>
    <id>http://evanhung.github.com/blog/2012/03/15/octopress-install</id>
    <content type="html"><![CDATA[<p><img src="http://d-i-d.heroku.com/images/octopress.png" alt="icon" /></p>

<h2>Octopress 安装过程整理</h2>

<p>最近一直想找个简单好用的博客平台，方便整理和收集教程与资料。一开始选中了<em>wordpress.com</em>，设置简单，免费主题也有很多，但是缺点是速度太慢，而且还要挖地道才能看，想自己搭一个<em>wordpress</em>博客，但是又没找到好的免费平台，所以最后还是选择了用Octopress在github和heroku上搭站。这两个虽然也是国外的站点，但是因为Octopress无需<em>SQL</em>数据库，只是通过ruby将<em>markdown</em>文件生成html，所以浏览速度还是比较快的。</p>

<p>下面就是简略的安装过程：</p>

<!-- more -->


<h3>环境搭建</h3>

<p><strong>Mac OSX Lion系统（实测10.7.3）：</strong></p>

<p>1.安装<em>HomeBrew</em>，这是一个程序管理工具，类似Ubuntu的apt-get. 可以极大的简化安装过程。</p>

<pre><code>$ mkdir -p /usr/local/Cellar    #避免BUG出现
$ /usr/bin/ruby -e "$(/usr/bin/curl -fsSL https://raw.github.com/mxcl/homebrew/master/Library/Contributions/install_homebrew.rb)"   
</code></pre>

<p>2.使用<em>HomeBrew</em>来自动安装git:</p>

<pre><code>$ brew install git
</code></pre>

<p>3.安装Ruby编译环境(通过RVM管理器)：</p>

<p>{%codeblock%}
$ bash -s stable &lt; &lt;(curl -s https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
$ rvm get head
$ rvm install 1.9.2     #也可以选择1.9.3
$ rvm 1.9.2 --default
{%endcodeblock%}</p>

<p>完成后环境的搭建就大致结束了，需要POW的话也可以安装POW:</p>

<pre><code>$ curl get.pow.cx | sh
</code></pre>

<p><strong>Ubuntu/Debian Linux系统（实测Lubuntu 11.10）：</strong></p>

<p>1.由于Ubuntu和Debian都自带很方便的APT管理工具，直接先安装git就行了:</p>

<pre><code>$ sudo apt-get install git-core git-gui git-doc
</code></pre>

<p>2.设定git SSh密匙，和git用户全局参数，参照www.github.com</p>

<p>3.安装Ruby编译环境(通过RVM管理器)：</p>

<p>{%codeblock%}
$ bash &lt; &lt;(curl -sk https://raw.github.com/wayneeseguin/rvm/master/binscripts/rvm-installer)
$ echo '[[ -s "$HOME/.rvm/scripts/rvm" ]] &amp;&amp; . "$HOME/.rvm/scripts/rvm"' >> ~/.bashrc
$ source ~/.bashrc
$ sudo apt-get install build-essential openssl libreadline6 libreadline6-dev zlib1g zlib1g-dev libssl-dev libyaml-dev libsqlite3-0 libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev autoconf libc6-dev libncurses5-dev automake libtool bison subversion
$ rvm install 1.9.2         #也可以选择1.9.3
$ rvm use 1.9.2 --default
{%endcodeblock%}</p>

<p>三步就完成了ubuntu的安装，环境搭建中最耗时的就是ruby的安装，因为是编译安装，cpu比较慢的电脑需要较长时间的等待。曾尝试过使用apt安装ruby,安装会快很多，但是使用ruby安装bundler的时候会出错, 不知道是为什么。</p>

<!-- more -->


<h3>安装Octopress章鱼出版社</h3>

<p><strong>全新安装Octopress：</strong></p>

<p>下载和安装最新的Octopress:
{%codeblock%}
$ git clone git://github.com/imathis/octopress.git octopress
$ cd octopress    <br/>
$ gem install bundler #安装依赖包：
$ bundle install
$ rake install  #安装默认主题</p>

<p>5.生成网站：
{%codeblock%}
$ rake generate #生成html
$ rake preview  #测试浏览(localhost:4000)：
$ rake deploy #发布到github
{%endcodeblock%}</p>

<p>这时应该就可以在username.github.com看到octopress的页面</p>

<p>7.将源码保存到github的source branch</p>

<pre><code>$ git push origin HEAD:source
</code></pre>

<h3>初步使用和设置Octopress章鱼出版社</h3>

<p>octopress的初步设置很简单，就是文件目录下 <code>_config.yml</code> 这个文件:</p>

<p><strong>主要设置</strong></p>

<p>{%codeblock%}
url:                # For rewriting urls for RSS, etc
title:              # Used in the header and title tags
subtitle:           # A description used in the header
author:             # Your name, for RSS, Copyright, Metadata
simple_search:      # Search engine for simple site search
description:        # A default meta description for your site
subscribe_rss:      # Url for your blog's feed, defauts to /atom.xml
subscribe_email:    # Url to subscribe by email (service required)
email:              # Email address for the RSS feed if you want it.
{%endcodeblock%}
其他的插件，第三方工具的设置也在该文件内。</p>

<p><strong>发表博文</strong></p>

<p>使用指令：</p>

<pre><code>$ rake new_post["tittle"]
</code></pre>

<p>就可以快速创建博文，然后使用文档工具打开source/_post/下的markdown文件就可以开始使用markdown编写博客了。Mac下推荐使用Mou编辑工具，Linux下推荐使用Retext编辑工具，使用这种工具的好处是自动预览和自动语法标注。</p>

<p><strong>绑定域名</strong></p>

<pre><code>$ echo '你要绑定的域名' &gt;&gt; source/CNAME
</code></pre>

<p>将你要绑定的域名CNAME到 http://你的GitHub用户名.github.com，如果是@纪录，需要加入207.97.227.245。</p>

<h5>参考连接：</h5>

<ul>
<li><a href="http://rubysource.com/installing-ruby-with-rvm-on-ubuntu/">http://rubysource.com/installing-ruby-with-rvm-on-ubuntu/</a></li>
<li><a href="http://blog.4321.la/articles/2012/01/25/set-up-octopress/">http://blog.4321.la/articles/2012/01/25/set-up-octopress/</a></li>
<li><a href="http://stackoverflow.com/questions/8000145/ruby-rvm-llvm-and-mysql">http://stackoverflow.com/questions/8000145/ruby-rvm-llvm-and-mysql</a></li>
<li><a href="http://mrzhang.me/blog/blog-equals-github-plus-octopress.html">http://mrzhang.me/blog/blog-equals-github-plus-octopress.html</a></li>
<li><a href="http://www.frederico-araujo.com/2011/07/30/installing-rails-on-os-x-lion-with-homebrew-rvm-and-mysql/">http://www.frederico-araujo.com/2011/07/30/installing-rails-on-os-x-lion-with-homebrew-rvm-and-mysql/</a></li>
<li><a href="http://geekontheway.github.com/blog/archives/">http://geekontheway.github.com/blog/archives/</a></li>
</ul>

]]></content>
  </entry>
  
</feed>
